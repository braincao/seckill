<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/mvc
       http://www.springframework.org/schema/mvc/spring-mvc.xsd">
    <!--配置整合springMVC过程,classpath就是java与resources下面的-->

    <!--1.开启springMVC注解模式-->
    <!--简化配置：
        1)自动注册DefaultAnnotationHandlerMapping,AnnotationMethodHandlerAdapter
        2)提供一系列：数据绑定，数字和日期的format,@NumberFormat,@DataTimeFormat,
        xml,json默认读写支持。
    -->
    <mvc:annotation-driven/>

    <!--2.静态资源默认sevlet配置
            1)加入对静态资源的处理：js,gif,png
            2)允许使用"/"做整体映射
    -->
    <mvc:default-servlet-handler/>

    <!-- 3.配置ViewResolver，这里配置jsp格式的。
          对转向页面的路径解析，spring mvc的这个ViewResolver就是将相同的后端数据给前端不同的呈现(jsp格式数据\JSON格式数据等)。
        可以用多个ViewResolver,使用order属性排序,InternalResourceViewResolver放在最后
    -->
    <!--json格式的，但这里先不用-->
    <!--<bean class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">-->
        <!--<property name="order" value="1" />-->
        <!--<property name="mediaTypes">-->
            <!--<map>-->
                <!--<entry key="json" value="application/json" />-->
                <!--<entry key="xml" value="application/xml" />-->
                <!--<entry key="htm" value="text/html" />-->
            <!--</map>-->
        <!--</property>-->

        <!--<property name="defaultViews">-->
            <!--<list>-->
                <!--&lt;!&ndash; JSON View &ndash;&gt;-->
                <!--<bean class="org.springframework.web.servlet.view.json.MappingJackson2JsonView"></bean>-->
            <!--</list>-->
        <!--</property>-->
        <!--<property name="ignoreAcceptHeader" value="true" />-->
    <!--</bean>-->

    <!--jsp格式的，InternalResourceViewResolver放在最后-->
    <bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
        <property name="prefix" value="/WEB-INF/jsps/"/>
        <property name="suffix" value=".jsp"/>
    </bean>

    <!--4.扫描web相关的bean，就是自己开发的Controller-->
    <context:component-scan base-package="com.braincao.web"/>
    
</beans>